// 响应式断点
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "未找到断点: #{$breakpoint}";
  }
}

// Flex 布局助手
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// 文本截断
@mixin text-truncate($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// 滚动条样式
@mixin scrollbar($width: 6px, $track-color: #f1f1f1, $thumb-color: #888) {
  &::-webkit-scrollbar {
    width: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $width / 2;
  }
}

// 渐变背景
@mixin gradient($start-color, $end-color, $direction: to right) {
  background: $start-color;
  background: linear-gradient($direction, $start-color, $end-color);
}

// 阴影效果
@mixin shadow($level: 'base') {
  $shadows: (
    'none': none,
    'sm': '0 1px 2px 0 rgba(0, 0, 0, 0.05)',
    'base': '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1)',
    'md': '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1)',
    'lg': '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1)',
    'xl': '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1)',
    '2xl': '0 25px 50px -12px rgba(0, 0, 0, 0.25)',
    'inner': 'inset 0 2px 4px 0 rgba(0, 0, 0, 0.05)'
  );
  
  @if map-has-key($shadows, $level) {
    box-shadow: #{map-get($shadows, $level)};
  } @else {
    @warn "Shadow level '#{$level}' not found. Using 'base' instead.";
    box-shadow: #{map-get($shadows, 'base')};
  }
}

// 动画过渡
@mixin transition($properties: all, $duration: 0.3s, $timing: ease-in-out) {
  transition: $properties $duration $timing;
}

// 绝对定位居中
@mixin absolute-center($position: both) {
  position: absolute;
  
  @if $position == 'both' {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if $position == 'vertical' {
    top: 50%;
    transform: translateY(-50%);
  } @else if $position == 'horizontal' {
    left: 50%;
    transform: translateX(-50%);
  }
}

// 网格系统
@mixin grid($columns: 12, $gap: map-get($spacings, '4')) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// 响应式容器
@mixin container($padding: null) {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  
  @if $padding {
    padding-right: $padding;
    padding-left: $padding;
  }
  
  @include respond-to('sm') {
    max-width: map-get($breakpoints, 'sm');
  }
  
  @include respond-to('md') {
    max-width: map-get($breakpoints, 'md');
  }
  
  @include respond-to('lg') {
    max-width: map-get($breakpoints, 'lg');
  }
  
  @include respond-to('xl') {
    max-width: map-get($breakpoints, 'xl');
  }
  
  @include respond-to('2xl') {
    max-width: map-get($breakpoints, '2xl');
  }
} 